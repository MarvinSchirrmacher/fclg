module.exports=function(e){var n=e.util._,s=require("marked"),t=require("node-syntaxhighlighter");s.setOptions({highlight:function(e,n){return n=n||"javascript",n=t.getLanguage(n),t.highlight(e,n)},gfm:!0}),e.initConfig({bower:"./bower.json",pkg:e.file.readJSON("smooth-scroll.jquery.json"),meta:{banner:'/*!<%= "\\n" %> * <%= pkg.title || pkg.name %> - v<%= pkg.version %> - <%= grunt.template.today("yyyy-mm-dd")  + "\\n" %><%= pkg.homepage ? " * " + pkg.homepage + "\\n" : "" %> * Copyright (c) <%= grunt.template.today("yyyy") %> <%= pkg.author.name %><%= "\\n" %> * Licensed <%= _.pluck(pkg.licenses, "type").join(", ") %> (<%= _.pluck(pkg.licenses, "url").join(", ") %>)<%= "\\n" %> */<%= "\\n\\n" %>'},concat:{all:{src:["src/jquery.<%= pkg.name %>.js"],dest:"jquery.<%= pkg.name %>.js"},options:{stripBanners:!0,banner:"<%= meta.banner %>"}},uglify:{all:{files:{"jquery.<%= pkg.name %>.min.js":["<%= concat.all.dest %>"]},options:{preserveComments:"some"}}},watch:{scripts:{files:"<%= jshint.all %>",tasks:["jshint:all"]},docs:{files:["readme.md","lib/tmpl/**/*.html"],tasks:["docs"]}},shell:{rsync:{options:{stdout:!0}}},setshell:{rsync:{file:"gitignore/settings.json",cmdAppend:"<%= pkg.name %>/"}},jshint:{all:["Gruntfile.js","src/**/*.js"],options:{curly:!0,latedef:!0,newcap:!0,noarg:!0,sub:!0,undef:!0,boss:!0,eqnull:!0,browser:!0,globals:{jQuery:!0,require:!1}}},version:{patch:{src:["<%= pkg.name %>.jquery.json","package.json","src/jquery.<%= pkg.name %>.js","jquery.<%= pkg.name %>.js"],options:{release:"patch"}},same:{src:["package.json","src/jquery.<%= pkg.name %>.js","jquery.<%= pkg.name %>.js"]},bannerPatch:{src:["jquery.<%= pkg.name %>.js"],options:{prefix:"- v",release:"patch"}}}}),e.registerMultiTask("setshell","Set grunt shell commands",function(){var n,s,t=this.target,r="shell."+t+".command",a=this.data.file,i=this.data.cmdAppend||"";e.file.exists(a)||e.warn("File does not exist: "+a),n=e.file.readJSON(a),n[t]||e.warn("No "+t+" property found in "+a),s=n[t]+i,e.config(r,s),e.log.writeln(("Setting "+r+" to:").cyan),e.log.writeln(s)}),e.registerTask("deploy",["setshell:rsync","shell:rsync"]),e.registerTask("bower","Update bower.json",function(){var s=e.config("bower"),t=e.config("pkg").name,r=e.file.readJSON(t+".jquery.json"),a={};["name","version","dependencies"].forEach(function(e){a[e]=r[e]}),n.extend(a,{main:e.config("concat.all.dest"),ignore:["demo/","lib/","src/","*.json"]}),a.name="jquery."+a.name,e.file.write(s,JSON.stringify(a,null,2)),e.log.writeln("File '"+s+"' updated.")}),e.registerTask("docs","Convert readme.md to html and concat with header and footer for index.html",function(){var n=e.file.read("readme.md"),t=e.template.process(e.file.read("lib/tmpl/header.tpl")),r=e.file.read("lib/tmpl/footer.tpl"),a=s(n);e.file.write("index.html",t+a+r)}),e.registerTask("build",["jshint","concat","version:same","bower","uglify","docs"]),e.registerTask("patch",["jshint","concat","version:bannerPatch","version:patch","bower","uglify"]),e.registerTask("default",["build"]),e.loadNpmTasks("grunt-contrib-jshint"),e.loadNpmTasks("grunt-contrib-uglify"),e.loadNpmTasks("grunt-contrib-concat"),e.loadNpmTasks("grunt-contrib-watch"),e.loadNpmTasks("grunt-version"),e.loadNpmTasks("grunt-shell")};