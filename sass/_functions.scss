@mixin size($width, $height) {
	height: $height;
	width: $width;
}
@mixin icon( $character, $add_margin: true, $after_element: false, $margin: 5px ) {
	@if $after_element {
		&::after {
			font-family: 'theme-icons';
			speak: none;
			font-style: normal;
			font-weight: normal;
			font-variant: normal;
			text-transform: none;
			line-height: 1;
			-webkit-font-smoothing: antialiased;
			content: "#{$character}";
			@if $add_margin {
				margin-left: #{$margin};
			}
		} 
	} @else {
		&::before {
			font-family: 'theme-icons';
			speak: none;
			font-style: normal;
			font-weight: normal;
			font-variant: normal;
			text-transform: none;
			line-height: 1;
			-webkit-font-smoothing: antialiased;
			content: "#{$character}";
			@if $add_margin {
				margin-right: #{$margin};
			}
		}
	}
}

@mixin icon-content( $character, $after_element: false ) {
	@if $after_element {
		&::after {
			content: "#{$character}" !important;
		} 
	} @else {
		&::before {
			content: "#{$character}" !important;
		}
	}
}

@mixin hyphenation() {
	 -ms-word-break: break-all;
	     // word-break: break-all;
	     word-break: break-word;
	-webkit-hyphens: auto;
	   -moz-hyphens: auto;
	        hyphens: auto;
}

/* Structure */

@mixin clearfix() {
	&::after {
		content: "";
		display: table;
		clear: both;
	}
}

@mixin three-dimensional() {
	position: relative;
	&::before {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		@include background(linear-gradient(
			rgba(255,255,255,.0) 0%,
			rgba(255,255,255,.1) 30%,
			rgba(  0,  0,  0,.2) 100%
		));
	}
}

@mixin flexbox(
	$width: null,
	$direction: row,
	$wrap: wrap,
	$justify: flex-start,
	$align: stretch)
{
	display: flex;
	flex-direction: $direction;
	flex-wrap: $wrap;
	justify-content: $justify;
	align-items: $align;
	
	@if ($width) {
	> * { width: $width; }
	}
}

/* Screen */

@mixin breakpoint( $point ) {
	@if $point == L {
		@media (max-width: 86.25rem) { @content; } // 1380px
	}
	@if $point == M {
		@media (max-width: 72rem) { @content; } // 1152px
	}
	@if $point == S {
		@media (max-width: 60rem) { @content; } // 960px
	}
	@if $point == XS {
		@media (max-width: 45rem) { @content; } // 720px
	}
	@if $point == XXS {
		@media (max-width: 27.5rem) { @content; } // 440px
	}
	@else {
		@media (max-width: $point) { @content; } // any
	}
}

@mixin breakpoint-mf( $point ) {
	@if $point == XXL {
		@media (min-width: 123.75rem) { @content; } // 1920px
	}
	@if $point == XL {
		@media (min-width: 105rem) { @content; } // 1680px
	}
	@if $point == L {
		@media (min-width: 86.25rem) { @content; } // 1380px
	}
	@if $point == M {
		@media (min-width: 72rem) { @content; } // 1152px
	}
	@if $point == S {
		@media (min-width: 60rem) { @content; } // 960px
	}
	@if $point == XS {
		@media (min-width: 45rem) { @content; } // 720px
	}
	@if $point == XXS {
		@media (min-width: 27.5rem) { @content; } // 440px
	}
	@else {
		@media (min-width: $point) { @content; } // any
	}
}

@mixin pixel-ratio($ratio) {
  @if $ratio == 1.5 {
	@media (-moz-min-device-pixel-ratio: 1.5),
		   (-o-min-device-pixel-ratio: 3/2),
		   (-webkit-min-device-pixel-ratio: 1.5),
		   (min-device-pixel-ratio: 1.5) { @content; }
  }
  @else if $ratio == 2 {
	@media (-moz-min-device-pixel-ratio: 2),
		   (-o-min-device-pixel-ratio: 2),
		   (-webkit-min-device-pixel-ratio: 2),
		   (min-device-pixel-ratio: 2) { @content; }
  }
}

/* Animations */

@include keyframes(loading) {
	from { @include transform(rotate(0deg)); }
	to   { @include transform(rotate(360deg)); }
}

@mixin darkmode() {
	@media (prefers-color-scheme: dark) {
		@content;
	}
}