/**
 * Page
 */

#page-header,
#page-main,
#page-footer {
	@include clearfix();
}

#page-header {
	padding-top: 30px;
}

#page-main {
	margin-top: 30px !important;
}

.inside {
	margin: 0 auto;
	padding: 0 2rem;
	max-width: 1920px;
	& + .inside { margin-top: 2rem; }
	@include breakpoint(L) {
		padding: 0 1rem;
	}
	@include breakpoint(XS) {
		padding: 0 0.5rem;
	}
}

#content {
	> br { display: none !important; }
}

/**
 * Boxes
 */

$module-title-height: 1.9rem;
.box {
	background: white;
	overflow: hidden;
	position: relative;
	box-shadow: $shadow;
	&[data-heading] {
		padding-top: $module-title-height;
		&.padded {
			padding-top: calc(#{$module-title-height} + #{$padding});
		}
	}
	> h1,
	> h2,
	> h3,
	> h4,
	> h5,
	> h6 {
		margin-top: 0;
	}
}

.box[data-heading]:before {
	background: $theme-color;
	color: white;
	content: attr(data-heading);
	font-family: $theme-font-header;
	font-size: 0.9rem;
	left: 0;
	line-height: 1;
	padding: 0.5rem $padding;
	position: absolute;
	text-transform: uppercase;
	top: 0;
	width: 100%;
	z-index: 1;
}

.box {
	p, ol, ul, label, tbody {
		a:not(.button):not(.read-more):not(.more-link) {
			text-decoration: underline;
			text-decoration-color: $theme-color-green;
			&:hover {
				color: $theme-color-green;
			}
		}
	}
	.alignleft {
		padding-right: 25px;
	}
	.alignright {
		padding-left: 25px;
	}
}

.boxes {
	&.flex {
		gap: 2rem;
		@include breakpoint(L) { gap: 1rem; }
		@include breakpoint(XS) { gap: 0.5rem; }
		&.inside {
			padding-right: 0;
		}
	}
	> br { display: none; }
}

.flex-1-5 { width: calc(100% * 1/5 - 2rem); }
.flex-1-4 { width: calc(100% * 1/4 - 2rem); }
.flex-1-3 { width: calc(100% * 1/3 - 2rem); }
.flex-1-2 { width: calc(100% * 1/2 - 2rem); }
.flex-2-3 { width: calc(100% * 2/3 - 2rem); }
.flex-3-4 { width: calc(100% * 3/4 - 2rem); }
.flex-4-5 { width: calc(100% * 4/5 - 2rem); }
.flex-5-6 { width: calc(100% * 5/6 - 2rem); }
.flex-8-9 { width: calc(100% * 8/9 - 2rem); }
.flex-1-1 {	width: calc(100% * 1/1 - 2rem); }

@include breakpoint(L) {
	.flex-1-5 { width: calc(100% * 1/5 - 1rem); }
	.flex-1-4 { width: calc(100% * 1/4 - 1rem); }
	.flex-1-3 { width: calc(100% * 1/3 - 1rem); }
	.flex-1-2 { width: calc(100% * 1/2 - 1rem); }
	.flex-2-3 { width: calc(100% * 2/3 - 1rem); }
	.flex-3-4 { width: calc(100% * 3/4 - 1rem); }
	.flex-4-5 { width: calc(100% * 4/5 - 1rem); }
	.flex-5-6 { width: calc(100% * 5/6 - 1rem); }
	.flex-8-9 { width: calc(100% * 8/9 - 1rem); }
	.flex-1-1 {	width: calc(100% * 1/1 - 1rem); }
}

@include breakpoint(M) {
	.flex-5-6 { width: calc(100% * 1/1 - 1rem); }
	.flex-8-9 { width: calc(100% * 1/1 - 1rem); }
}

@include breakpoint(S) {
	.flex-1-4 { width: calc(100% * 1/3 - 1rem); }
	.flex-1-3 { width: calc(100% * 1/2 - 1rem); }
	.flex-1-2 { width: calc(100% * 2/3 - 1rem);
		> .flex-1-2 { width: calc(100% * 1/2 - 1rem); }
	}
	.flex-2-3 {
		width: calc(100% * 1/1 - 0.5rem);
		> .flex-1-2 { width: calc(100% * 1/2 - 1rem); }
	}
	.flex-3-4 { width: calc(100% * 1/1 - 1rem); }
	.flex-4-5 { width: calc(100% * 1/1 - 1rem); }
	.sidebar.flex-1-4 {
		width: calc(100% * 1/1 - 1rem);
		> .flex-1-1 { width: calc(100% * 1/3 - 1rem); }
	}
}
@include breakpoint(XS) {
	.flex-1-5 { width: calc(100% * 1/3 - 0.5rem); }
	.flex-1-4 { width: calc(100% * 1/1 - 0.5rem);
		> .flex-1-1 { width: calc(100% * 1/2 - 0.5rem); }
	}
	.flex-1-3 { width: calc(100% * 1/2 - 0.5rem); }
	.flex-1-2 { width: calc(100% * 1/1 - 0.5rem); }
	.flex-2-3 {
		> .flex-1-3 { width: calc(100% * 1/2 - 0.5rem); }
	}
	.flex-3-4 {
		width: calc(100% * 1/1 - 0.5rem);
		.flex-2-3 { width: calc(100% * 1/1 - 0.5rem); }
		.flex-1-4 { width: calc(100% * 1/2 - 0.5rem); }
	}
	.flex-4-5 { width: calc(100% * 1/1 - 0.5rem); }
	.flex-5-6 { width: calc(100% * 1/1 - 0.5rem); }
	.flex-8-9 { width: calc(100% * 1/1 - 0.5rem); }
	.flex-1-1 {	width: calc(100% * 1/1 - 0.5rem); }
	.sidebar.flex-1-4 {
		> .flex-1-1 { width: calc(100% * 1/2 - 0.5rem); }
	}
}
@include breakpoint(XXS) {
	.flex-3-4.group {
		.flex-1-4 { width: calc(100% * 1/2 - 0.5rem) !important; }
	}
	.flex-1-5 { width: calc(100% * 1/2 - 0.5rem); }
	.flex-1-3 { width: calc(100% * 1/1 - 0.5rem); }
	[class*="flex-"] {
		width: calc(100% - 0.5rem) !important;
	}
}

@include darkmode() {
    .box {
        background: lighten(black, 15%);

        &[data-heading]:not([data-heading=""]) {
            &:before {
                background: lighten(black, 10%);
                color: white;
            }
        }
    }
}
